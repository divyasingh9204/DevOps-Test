name: Get Security Summary Results for checkmarx-one sast veracode

on: workflow_dispatch

jobs:
  build:
    # Running your workflow when a pull request merges
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-when-a-pull-request-merges-1
    #if: github.event.pull_request.merged == true
    name: Build
    runs-on: ubuntu-latest
    steps:           
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

  deploy:
      name: Deploy
      needs: build
      runs-on: ubuntu-latest
      steps:     
        - name: ServiceNow DevOps Security Results
          uses: ServiceNow/servicenow-devops-security-result@dev
          with:
            devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
            instance-url: ${{ secrets.SN_INSTANCE_URL }}
            tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            context-github: ${{ toJSON(github) }}
            job-name: 'Deploy'
            security-result-attributes:  '{"scanner": "Checkmarx SAST", "projectId": "1094","securityToolId": "766ea99b87cdf150c67da8673cbb3560"}'
  ServiceNowSecurityScanResults:
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: ServiceNow Security Scan Results
    steps:
      - name: ServiceNow DevOps Security Results1
        uses: ServiceNow/servicenow-devops-security-result@dev
        with:
            # Devops Integration User Name
            devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
            # Devops Integration User Password
            devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
            # ServiceNow Instance URL
            instance-url: ${{ secrets.SN_INSTANCE_URL }}
            # Orchestration Tool Id
            tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            # GitHub Context
            context-github: ${{ toJSON(github) }}
            # Display Name of the Job
            job-name: 'ServiceNow Security Scan Results1'
            security-result-attributes: '{"scanner": "Checkmarx One", "projectName": "akhandpratapsingh/ProjectWithTestCasesRename", "projectId": "cf1864b4-3c5c-4fd2-92ef-1a702811e76c", "scanId": "d077dd5c-f7fa-4d27-8872-635882aaae2d", "securityToolId": "8bfd09b8c3253110b31ff42c05013181"}'
            # scanner: Scanning tool and is required e.g. Checkmarx One.
            # projectName/projectId: Name/Id of your Checkmarx One project and is required. This attribute is applicable only for Checkmarx One.
            # scanId: Checkmarx One scan id and is optional. This attribute is applicable only for Checkmarx One.
            # securityToolId: Security tool onboarded in ServiceNow (sys_id of the onboarded security tool) and is optional.  


      - name: ServiceNow DevOps Security Results2
        uses: ServiceNow/servicenow-devops-security-result@dev
        with:
            # DevOps Integration Token of GitHub tool created in ServiceNow instance for token based authentication.
            devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
            # ServiceNow Instance URL
            instance-url: ${{ secrets.SN_INSTANCE_URL }}
            # Orchestration Tool Id
            tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            # GitHub Context
            context-github: ${{ toJSON(github) }}
            # Display Name of the Job
            job-name: 'ServiceNow Security Scan Results2'
            security-result-attributes: '{"scanner": "Checkmarx One", "projectName": "DemoProject", "projectId": "75acb348-c054-4ab3-807d-e17e92a923ab", "scanId": "2bb9e016-3669-488c-8341-ffa4831221f3", "securityToolId": "8bfd09b8c3253110b31ff42c05013181"}'
            # scanner: Scanning tool and is required e.g. Checkmarx One.
            # projectName/projectId: Name/Id of your Checkmarx One project and is required. This attribute is applicable only for Checkmarx One.
            # scanId: Checkmarx One scan id and is optional. This attribute is applicable only for Checkmarx One.
            # securityToolId: Security tool onboarded in ServiceNow (sys_id of the onboarded security tool) and is optional.  

      - name: ServiceNow DevOps Security Results3
        uses: ServiceNow/servicenow-devops-security-result@dev
        with:
            # Devops Integration User Name
            devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
            # Devops Integration User Password
            devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
            # ServiceNow Instance URL
            instance-url: ${{ secrets.SN_INSTANCE_URL }}
            # Orchestration Tool Id
            tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            # GitHub Context
            context-github: ${{ toJSON(github) }}
            # Display Name of the Job
            job-name: 'ServiceNow Security Scan Results3'
            security-result-attributes: '{"scanner": "Checkmarx SAST", "projectId": "1076", "securityToolId": "76921130c3653110b31ff42c050131d5"}'
            # scanner: Scanning tool and is required e.g. Checkmarx SAST.
            # projectId: Id of your Checkmarx SAST project and is required. This attribute is applicable only for Checkmarx SAST.
            # securityToolId: Security tool onboarded in ServiceNow (sys_id of the onboarded security tool) and is optional.

      - name: ServiceNow DevOps Security Results4
        uses: ServiceNow/servicenow-devops-security-result@dev
        with:
            # DevOps Integration Token of GitHub tool created in ServiceNow instance for token based authentication.
            devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
            # ServiceNow Instance URL
            instance-url: ${{ secrets.SN_INSTANCE_URL }}
            # Orchestration Tool Id
            tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            # GitHub Context
            context-github: ${{ toJSON(github) }}
            # Display Name of the Job
            job-name: 'ServiceNow Security Scan Results4'
            security-result-attributes: '{"scanner": "Checkmarx SAST", "projectId": "3285", "securityToolId": "76921130c3653110b31ff42c050131d5"}'
            # scanner: Scanning tool and is required e.g. Checkmarx SAST.
            # projectId: Id of your Checkmarx SAST project and is required. This attribute is applicable only for Checkmarx SAST.
            # securityToolId: Security tool onboarded in ServiceNow (sys_id of the onboarded security tool) and is optional. 

      - name: ServiceNow DevOps Security Results5
        uses: ServiceNow/servicenow-devops-security-result@dev
        with:
            # DevOps Integration Token of GitHub tool created in ServiceNow instance for token based authentication.
            devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
            # ServiceNow Instance URL
            instance-url: ${{ secrets.SN_INSTANCE_URL }}
            # Orchestration Tool Id
            tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            # GitHub Context
            context-github: ${{ toJSON(github) }}
            # Display Name of the Job
            job-name: 'ServiceNow Security Scan Results5'
            security-result-attributes: '{"scanner": "Veracode", "applicationName": "10kflaws-44", "buildVersion": "2023-06-07.01", "securityToolId": "9aad95fcc3653110b31ff42c05013194"}'
            # scanner: Scanning tool and is required e.g. Veracode.
            # applicationName: Name of your Veracode application and is required. This attribute is applicable only for Veracode.
            # buildVersion: Veracode Scan name / build version and is optional. This attribute is applicable only for Veracode.
            # securityToolId: Security tool onboarded in ServiceNow (sys_id of the onboarded security tool) and is optional.

      - name: ServiceNow DevOps Security Results
        uses: ServiceNow/servicenow-devops-security-result@dev
        with:
            # Devops Integration User Name
            devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
            # Devops Integration User Password
            devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
            # ServiceNow Instance URL
            instance-url: ${{ secrets.SN_INSTANCE_URL }}
            # Orchestration Tool Id
            tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            # GitHub Context
            context-github: ${{ toJSON(github) }}
            # Display Name of the Job
            job-name: 'ServiceNow Security Scan Results'
            security-result-attributes: '{"scanner": "Veracode", "applicationName": "10kflaws-72", "buildVersion": "2023-06-07.01", "securityToolId": "9aad95fcc3653110b31ff42c05013194"}'
            # scanner: Scanning tool and is required e.g. Veracode.
            # applicationName: Name of your Veracode application and is required. This attribute is applicable only for Veracode.
            # buildVersion: Veracode Scan name / build version and is optional. This attribute is applicable only for Veracode.
            # securityToolId: Security tool onboarded in ServiceNow (sys_id of the onboarded security tool) and is optional.
  changeApproval:
    needs: ServiceNowSecurityScanResults
    name: ServiceNow-Change-Approval
    runs-on: ubuntu-latest
    steps:     
      - name: ServiceNow DevOps Change Automation
        uses: ServiceNow/servicenow-devops-change@dev
        id: create
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'ServiceNow-Change-Approval'
          change-request: '{"setCloseCode":"true","attributes":{"short_description":"Automated Software Deployment","assignment_group":"a715cd759f2002002920bde8132e7018","assigned_to":{"name":"Change Manager"},"chg_model":"007c4001c343101035ae3f52c1d3aeb2","description":"Automated Software Deployment.","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
          interval: '100'
          timeout: '3600'
          changeCreationTimeOut: '3600'
  # changeApproval:
  #     #if: github.event.pull_request.merged == true
  #     name: changeApproval
  #     needs: ServiceNowSecurityScanResults
  #     runs-on: ubuntu-latest
  #     steps:     
  #         - name: ServiceNow DevOps Change Automation
  #         # You may pin to the exact commit or the version.            
  #           uses: ServiceNow/servicenow-devops-change@dev
  #           with:
  #               # ServiceNow Instance URL
  #               instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #               # Devops Integration User Name
  #               devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
  #               # Devops Integration User Password
  #               devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
  #               # Orchestration Tool Id
  #               tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #               # Display Name of the Job
  #               job-name: 'changeApproval'
  #               # Github Context
  #               context-github: ${{ toJSON(github) }}
  #               # The max. time in seconds to wait until the action should fail.
  #               timeout: 3600 # optional, default is 3600
  #               # The time in seconds to wait between trying the API.
  #               interval: 100 # optional, default is 100
  #               # The customized inputs to create change with the requested details.
  #               changeCreationTimeOut: 3600
  #               abortOnChangeCreationFailure: 'false'
  #               abortOnChangeStepTimeout: 'false'
  #               change-request: '{"setCloseCode": "true", "attributes": { "short_description": "Automated Software Deployment","description": "Automated Software Deployment.","assignment_group": "a715cd759f2002002920bde8132e7018", "implementation_plan": "Software update is tested and results can be found in Test Summaries Tab.", "backout_plan": "When software fails in production, the previous software release will be re-deployed.","test_plan": "Testing if the software was successfully deployed", "chg_model": {"name": "normal"} } }'
   
